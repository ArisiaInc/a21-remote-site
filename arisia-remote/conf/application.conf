# https://www.playframework.com/documentation/latest/Configuration

# This tells the system to start with this class, and load everything from there:
play.application.loader = arisia.ArisiaApplicationLoader

play.filters.enabled += "play.filters.cors.CORSFilter"

play.filters.cors.allowedOrigins =  null

db.default.driver = org.postgresql.Driver

# We need to move the admin stuff to a non-default position, because the frontend needs /assets for their
# stuff:
play.assets.urlPrefix = "/admin/assets"

arisia {
  # Set this to false to open the doors to the public:
  early.access.only = true

  # These are both for use in local development in secrets.conf:
  allow.logins = []
  dev.admins = []

  schedule {
    # Once a minute, check whether we need to start/stop Zoom sessions:
    check.interval = 1m
    # How many minutes before a Zoom program item does the prep session start and end:
    prep.start = 30m
    prep.end = 5m
  }

  timer {
    initial.delay = 10s
  }

  zambia {
    # The location of the "konOpas" dump on the live Zambia site:
    # Note that this is in JSON format now, rather than the official KonOpas JSONP format, since JSON is really
    # what we want:
    url = "https://zambia.arisia.org/konOpas.php"
    # The URL to connect to in order to log into Zambia, so we can pull KonOpas:
    loginUrl = "https://zambia.arisia.org/doLogin.php"
    # How often to refresh from Zambia:
    refresh.interval = 5m
    # The Badge ID and Password of the Zambia user with konOpas access rights; put these in secrets.conf:
    badgeId = ""
    password = ""
  }

  zoom.api {
    # These get put into your secrets.conf in order to turn on Zoom integration:
    key = ""
    secret = ""
    # JWTs are valid for one minute:
    timeout = 60000
    baseUrl = "https://api.zoom.us/v2"
    # The Zoom User ID being used to create meetings, in secrets.conf:
    userId = ""
  }
}

# All secrets MUST go into the .gitignore'd secrets.conf file. See secrets.conf.template for details.
include "secrets.conf"
